services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - OLLAMA_URL=http://ai-model:11434
      - OLLAMA_MODEL=gemma2:2b
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/facilities_feedback
    networks:
      - app-network
    depends_on:
      - ai-model
      - database
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=facilities_feedback
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ai-model:
    build:
      context: ./ai-model
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    networks:
      - app-network
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_MODEL=gemma2:2b
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8082:8000"
    environment:
      - DATABASE_NAME=facilities_feedback
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
    networks:
      - app-network
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - database

volumes:
  ollama_models:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
